/*************************************************************************************************
Author: Sean Boerger

Name: HUDController

Description: Handles the HUD elements

Date: 1/13/15
*************************************************************************************************/
class HUDController : ZilchComponent
{
    [Property]
    var HudLevel : Level = null;
    
    [Property]
    var DamageTimerValue : Real = 2;
    var DamageTimerP1 : Real = 0.0;
    var DamageTimerP2 : Real = 0.0;
    
    [Property]
    var StunTimerValue: Real = 10.0;
    var StunTimerP1 : Real = 0.0;
    var StunTimerP2 : Real = 0.0;
    
    /* The stamina stats of the two players */
    [Property]
    var P1_Stamina : Real = 3;
    [Property]
    var P2_Stamina : Real = 3;
    
    var InitialColor : Real4 = Real4(0.0, 0.0, 0.0, 0.0);
    
    /* Variables used to connect to the stamina counters */
    var P1_Stamina_Bar : Cog = null;
    var P2_Stamina_Bar : Cog = null;
    
    var P1_Stunned : Boolean = false;
    var P2_Stunned : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        /* Connect to the two stamina bars for later use */
        this.P1_Stamina_Bar = this.Owner.HUDCreator.HudSpace.FindObjectByName("P1_Stamina_Bar");
        this.P2_Stamina_Bar = this.Owner.HUDCreator.HudSpace.FindObjectByName("P2_Stamina_Bar");
        
        /* Store the intial color */
        this.InitialColor = this.P1_Stamina_Bar.Sprite.Color;
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if (this.DamageTimerP1 > 0)
        {
            this.DamageTimerP1 -= 0.1;
        }
        
        if (this.DamageTimerP1 <= 0)
        {
            this.DamageTimerP1 = 0;
        }
        
        if (this.DamageTimerP2 > 0)
        {
            this.DamageTimerP2 -= 0.1;
        }
        
        if (this.DamageTimerP2 <= 0)
        {
            this.DamageTimerP2 = 0;
        }
        /* Update the stamina bar sizes */
        this.P1_Stamina_Bar.Area.Size = Real2(this.P1_Stamina, 1.0);
        this.P2_Stamina_Bar.Area.Size = Real2(this.P2_Stamina, 1.0);
        
        //Console.WriteLine("`this.InitialColor`");
        
        /* Update the Player 1 stamina bar colors based on damage */
        if (this.P1_Stamina == 3)
        {
            this.P1_Stamina_Bar.Sprite.Color = this.InitialColor;
        }
        else if (this.P1_Stamina == 1)
        {
            this.P1_Stamina_Bar.Sprite.Color = Real4(1.0, 0.0, 0.0, 1.0);
        }
        
        /* Update the Player 1 stamina bar colors based on damage */
        if (this.P2_Stamina == 3)
        {
            this.P2_Stamina_Bar.Sprite.Color = this.InitialColor;
        }
        else if (this.P2_Stamina == 1)
        {
            this.P2_Stamina_Bar.Sprite.Color = Real4(1.0, 0.0, 0.0, 1.0);
        }
        
        if (this.P1_Stunned == true)
        {
            this.StunTimerP1 -= 0.1;
            
            if (this.StunTimerP1 <= 0)
            {
                this.P1_Stamina = 3;
                
                this.StunTimerP1 = 0;
                
                this.P1_Stunned = false;
            }
        }
        
        if (this.P2_Stunned == true)
        {
            this.StunTimerP2 -= 0.1;
            
            if (this.StunTimerP2 <= 0)
            {
                this.P2_Stamina = 3;
                
                this.StunTimerP2 = 0;
                
                this.P2_Stunned = false;
            }
        }
    }
    
    function PlayerOneTakeDamage()
    {
        if (this.DamageTimerP1 <= 0 && this.P1_Stunned == false)
        {
            if (this.P1_Stamina > 1)
            {
                this.P1_Stamina -= 1;
            }
            else
            {
                this.P1_Stamina -= 1;
                this.StunPlayerOne();
            }
            
            /* Update next hit timer */
            this.DamageTimerP1 = this.DamageTimerValue;
        }

    }
    
    function PlayerTwoTakeDamage()
    {
        if (this.DamageTimerP2 <= 0 && this.P2_Stunned == false)
        {
            if (this.P2_Stamina > 1)
            {
                this.P2_Stamina -= 1;
            }
            else
            {
                this.P2_Stamina -= 1;
                this.StunPlayerTwo();
            }
            
            /* Update next hit timer */
            this.DamageTimerP2 = this.DamageTimerValue;
        }
    }
    
    function StunPlayerOne()
    {
        this.P1_Stunned = true;
        
        /* Update next move timer */
        this.StunTimerP1 = this.StunTimerValue;
    }
    
    function StunPlayerTwo()
    {
        this.P2_Stunned = true;
        
        /* Update next move timer */
        this.StunTimerP2 = this.StunTimerValue;
    }
}
